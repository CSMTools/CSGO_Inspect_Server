generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model steam_users {
  steam_id        String   @id @unique
  avatar_hash     String
  vac_ban         Boolean?
  trade_ban       Boolean?
  last_update     BigInt
  checked_friends Boolean  @default(false)
  premium         Boolean  @default(false)
  role            UserRole @default(USER)

  @@index([steam_id])
}

model steam_item {
  id                 String            @id @unique
  defIndex           Int
  paintIndex         Int
  rarity             Int
  quality            Int
  killeaterScoretype Int?
  killeaterValue     Int
  customName         String?
  paintSeed          Int
  paintWear          Float
  origin             Int
  fadePercentage     Float?
  ownerId            String
  lastUpdate         BigInt
  stickers           applied_sticker[]
  ownerHistory       item_history[]

  @@index([id])
  @@index([defIndex])
  @@index([paintIndex])
  @@index([defIndex, paintIndex])
}

model applied_sticker {
  stickerId Int
  slot      Int
  tintId    Int?
  wear      Float?
  scale     Float?
  rotation  Float?
  itemId    String
  item      steam_item @relation(fields: [itemId], references: [id])

  @@id([itemId, slot, stickerId])
  @@index([stickerId])
  @@index([itemId])
}

model item_history {
  ownerId       String
  inspectFields String
  type          ItemOwnerType
  createdAt     DateTime      @default(now())
  itemId        String
  item          steam_item    @relation(fields: [itemId], references: [id])

  @@id([itemId, ownerId, createdAt])
  @@index([itemId])
  @@index([inspectFields])
}

enum ItemOwnerType {
  USER
  MARKET
  UNKNOWN
}

enum UserRole {
  USER
  PARTNER
  ADMIN
  OWNER
}
